# nginx/nginx.conf

events {}

http {
    server {
        listen 80;

        location /web {
            proxy_pass http://web:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            proxy_pass http://api:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}



# # nginx.conf

# # Define the upstream backend server (Node.js backend)
# upstream backend {
#     server localhost:3000;
# }

# # Define the upstream frontend server (React frontend)
# upstream frontend {
#     server localhost:3001;
# }

# # Configuration for the server block listening on port 80
# server {
#     listen 80;
#     server_name your_domain.com;  # Change this to your actual domain

#     location / {
#         # Proxy pass to the React frontend
#         proxy_pass http://frontend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location /api {
#         # Proxy pass to the Node.js backend
#         proxy_pass http://backend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     # Additional configuration can be added as needed
#     # ...

#     # Error handling configuration
#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root html;
#     }
# }
